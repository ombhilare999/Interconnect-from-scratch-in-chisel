$date
	Thu Jun 23 14:37:57 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_tb $end
$var wire 32 ! rdata [31:0] $end
$var reg 4 " address [3:0] $end
$var reg 1 # clock $end
$var reg 4 $ length [3:0] $end
$var reg 1 % rd $end
$var reg 1 & rddatavalid $end
$var reg 1 ' ready $end
$var reg 1 ( reset $end
$var reg 32 ) wdata [31:0] $end
$var reg 1 * wr $end
$scope module uut $end
$var wire 1 + Rx_clock $end
$var wire 4 , Rx_io_ADD [3:0] $end
$var wire 1 - Rx_io_RD $end
$var wire 1 . Rx_io_TOP_RDDATAVALID $end
$var wire 1 / Rx_io_TOP_READY $end
$var wire 32 0 Rx_io_WDATA [31:0] $end
$var wire 1 1 Rx_io_WR $end
$var wire 1 2 Tx_clock $end
$var wire 32 3 Tx_io_RDATA [31:0] $end
$var wire 1 4 Tx_io_RX_RDDATAVALID $end
$var wire 1 5 Tx_io_RX_READY $end
$var wire 4 6 Tx_io_TOP_ADDRESS [3:0] $end
$var wire 4 7 Tx_io_TOP_LENGTH [3:0] $end
$var wire 1 8 Tx_io_TOP_RD $end
$var wire 32 9 Tx_io_TOP_WDATA [31:0] $end
$var wire 1 : Tx_io_TOP_WR $end
$var wire 1 ; Tx_reset $end
$var wire 1 # clock $end
$var wire 4 < io_top_address [3:0] $end
$var wire 4 = io_top_length [3:0] $end
$var wire 1 % io_top_rd $end
$var wire 32 > io_top_rdata [31:0] $end
$var wire 1 & io_top_rddatavalid $end
$var wire 1 ' io_top_ready $end
$var wire 32 ? io_top_wdata [31:0] $end
$var wire 1 * io_top_wr $end
$var wire 1 ( reset $end
$var wire 1 @ Tx_io_WR $end
$var wire 32 A Tx_io_WDATA [31:0] $end
$var wire 32 B Tx_io_TOP_RDATA [31:0] $end
$var wire 1 C Tx_io_RD $end
$var wire 4 D Tx_io_ADDRESS [3:0] $end
$var wire 1 E Rx_io_READY $end
$var wire 1 F Rx_io_RDDATAVALID $end
$var wire 32 G Rx_io_RDATA [31:0] $end
$scope module Rx $end
$var wire 1 H _T_4 $end
$var wire 1 + clock $end
$var wire 4 I io_ADD [3:0] $end
$var wire 1 - io_RD $end
$var wire 1 F io_RDDATAVALID $end
$var wire 1 E io_READY $end
$var wire 1 . io_TOP_RDDATAVALID $end
$var wire 1 / io_TOP_READY $end
$var wire 32 J io_WDATA [31:0] $end
$var wire 1 1 io_WR $end
$var wire 1 K r_wr $end
$var wire 1 L rf__T_7_en $end
$var wire 1 M rf__T_7_mask $end
$var wire 32 N rf__T_9_data [31:0] $end
$var wire 4 O rf__T_addr [3:0] $end
$var wire 32 P rf__T_data [31:0] $end
$var wire 1 Q rf__T_en $end
$var wire 1 R rf__T_mask $end
$var wire 4 S rf__T_9_addr [3:0] $end
$var wire 32 T rf__T_7_data [31:0] $end
$var wire 4 U rf__T_7_addr [3:0] $end
$var wire 32 V io_RDATA [31:0] $end
$var wire 32 W _GEN_3 [31:0] $end
$var wire 32 X _GEN_13 [31:0] $end
$var wire 1 Y _GEN_12 $end
$upscope $end
$scope module Tx $end
$var wire 1 Z _GEN_17 $end
$var wire 1 [ _GEN_55 $end
$var wire 1 \ _GEN_56 $end
$var wire 1 2 clock $end
$var wire 4 ] io_ADDRESS [3:0] $end
$var wire 1 C io_RD $end
$var wire 32 ^ io_RDATA [31:0] $end
$var wire 1 4 io_RX_RDDATAVALID $end
$var wire 1 5 io_RX_READY $end
$var wire 4 _ io_TOP_ADDRESS [3:0] $end
$var wire 4 ` io_TOP_LENGTH [3:0] $end
$var wire 1 8 io_TOP_RD $end
$var wire 32 a io_TOP_WDATA [31:0] $end
$var wire 1 : io_TOP_WR $end
$var wire 1 @ io_WR $end
$var wire 1 b read_write $end
$var wire 1 ; reset $end
$var wire 32 c io_WDATA [31:0] $end
$var wire 32 d io_TOP_RDATA [31:0] $end
$var wire 3 e _T_8 [2:0] $end
$var wire 1 f _T_5 $end
$var wire 4 g _T_31 [3:0] $end
$var wire 1 h _T_3 $end
$var wire 4 i _T_29 [3:0] $end
$var wire 1 j _T_27 $end
$var wire 1 k _T_25 $end
$var wire 1 l _T_12 $end
$var wire 32 m _GEN_68 [31:0] $end
$var wire 32 n _GEN_60 [31:0] $end
$var wire 32 o _GEN_48 [31:0] $end
$var reg 4 p r_address [3:0] $end
$var reg 4 q r_len [3:0] $end
$var reg 1 r r_rd $end
$var reg 3 s r_transaction_cnt [2:0] $end
$var reg 32 t r_wdata [31:0] $end
$var reg 1 u r_wr $end
$var reg 1 v read_wait $end
$var reg 2 w state [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx w
xv
xu
bx t
bx s
xr
bx q
bx p
bx o
bx n
bx m
xl
xk
xj
bx i
xh
bx g
xf
bx e
bx d
bx c
xb
bx a
bx `
bx _
bx ^
bx ]
x\
x[
xZ
xY
bx X
bx W
bx V
bx U
bx T
bx S
1R
1Q
b10 P
b100 O
bx N
1M
xL
xK
bx J
bx I
xH
bx G
xF
xE
bx D
xC
bx B
bx A
x@
bx ?
bx >
bx =
bx <
x;
x:
bx 9
x8
bx 7
bx 6
x5
x4
bx 3
02
x1
bx 0
x/
x.
x-
bx ,
0+
x*
bx )
x(
x'
x&
x%
bx $
0#
bx "
bx !
$end
#5000
12
1+
1#
#10000
02
0+
0#
#15000
b0 n
b0 3
b0 ^
b0 G
b0 V
0L
b0 X
b0 !
b0 >
b0 B
b0 d
b0 m
b0 W
0Y
0K
b0 T
b0 S
b0 U
0\
0[
1h
0k
b0 w
0v
1f
b1 e
b0 s
0-
0C
0r
01
0@
0u
b0 0
b0 J
b0 A
b0 c
b0 t
b1 i
b0 ,
b0 I
b0 D
b0 ]
b0 p
0j
b1111 g
b0 q
b0 o
0b
12
1+
1#
04
0F
0.
0&
08
0%
0:
0*
1;
1(
#20000
02
0+
0#
#25000
1L
1K
b110 T
b101 S
b101 U
11
1@
1u
b110 0
b110 J
b110 A
b110 c
b110 t
b110 i
b101 ,
b101 I
b101 D
b101 ]
b101 p
b0 g
b1 q
1H
1Z
0l
b1 7
b1 `
b1 $
b1 =
15
1E
1/
1'
1:
1*
b110 9
b110 a
b110 )
b110 ?
b101 6
b101 _
b101 "
b101 <
0;
0(
12
1+
1#
#30000
02
0+
0#
#35000
b110 N
b0 9
b0 a
b0 )
b0 ?
0:
0*
b0 7
b0 `
b0 $
b0 =
b0 6
b0 _
b0 "
b0 <
12
1+
1#
#40000
02
0+
0#
#45000
b110 !
b110 >
b110 B
b110 d
b110 o
b110 n
b110 3
b110 ^
b110 G
b110 V
0L
1Y
b110 X
1b
b110 W
0K
1v
1-
1C
1r
01
0@
0u
b1 7
b1 `
b1 $
b1 =
14
1F
1.
1&
18
1%
b101 6
b101 _
b101 "
b101 <
12
1+
1#
#50000
02
0+
0#
#55000
0Z
0v
bx X
bx W
b0 !
b0 >
b0 B
b0 d
bx N
b0 S
b0 T
b0 U
b0 3
b0 ^
b0 G
b0 V
b0 o
b0 n
0H
0b
05
0E
0/
0'
04
0F
0.
0&
08
0%
b0 7
b0 `
b0 $
b0 =
b0 6
b0 _
b0 "
b0 <
12
1+
1#
#60000
02
0+
0#
#65000
12
1+
1#
#70000
02
0+
0#
#75000
12
1+
1#
#80000
02
0+
0#
#85000
12
1+
1#
#90000
02
0+
0#
#95000
12
1+
1#
#100000
02
0+
0#
#105000
12
1+
1#
#110000
02
0+
0#
#115000
12
1+
1#
#120000
02
0+
0#
#125000
12
1+
1#
#130000
02
0+
0#
#135000
12
1+
1#
#140000
02
0+
0#
#145000
12
1+
1#
#150000
02
0+
0#
#155000
12
1+
1#
