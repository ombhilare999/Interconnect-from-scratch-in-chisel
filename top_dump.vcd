$date
	Tue Jun 21 16:45:22 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_tb $end
$var wire 32 ! rdata [31:0] $end
$var reg 4 " address [3:0] $end
$var reg 1 # clock $end
$var reg 4 $ length [3:0] $end
$var reg 1 % rd $end
$var reg 1 & rddatavalid $end
$var reg 1 ' ready $end
$var reg 1 ( reset $end
$var reg 32 ) wdata [31:0] $end
$var reg 1 * wr $end
$scope module uut $end
$var wire 1 + Rx_clock $end
$var wire 4 , Rx_io_ADD [3:0] $end
$var wire 1 - Rx_io_RD $end
$var wire 1 . Rx_io_TOP_RDDATAVALID $end
$var wire 1 / Rx_io_TOP_READY $end
$var wire 32 0 Rx_io_WDATA [31:0] $end
$var wire 1 1 Rx_io_WR $end
$var wire 1 2 Tx_clock $end
$var wire 32 3 Tx_io_RDATA [31:0] $end
$var wire 1 4 Tx_io_RX_RDDATAVALID $end
$var wire 1 5 Tx_io_RX_READY $end
$var wire 4 6 Tx_io_TOP_ADDRESS [3:0] $end
$var wire 4 7 Tx_io_TOP_LENGTH [3:0] $end
$var wire 1 8 Tx_io_TOP_RD $end
$var wire 32 9 Tx_io_TOP_WDATA [31:0] $end
$var wire 1 : Tx_io_TOP_WR $end
$var wire 1 ; Tx_reset $end
$var wire 1 # clock $end
$var wire 4 < io_top_address [3:0] $end
$var wire 4 = io_top_length [3:0] $end
$var wire 1 % io_top_rd $end
$var wire 32 > io_top_rdata [31:0] $end
$var wire 1 & io_top_rddatavalid $end
$var wire 1 ' io_top_ready $end
$var wire 32 ? io_top_wdata [31:0] $end
$var wire 1 * io_top_wr $end
$var wire 1 ( reset $end
$var wire 1 @ Tx_io_WR $end
$var wire 32 A Tx_io_WDATA [31:0] $end
$var wire 32 B Tx_io_TOP_RDATA [31:0] $end
$var wire 1 C Tx_io_RD $end
$var wire 4 D Tx_io_ADDRESS [3:0] $end
$var wire 1 E Rx_io_READY $end
$var wire 1 F Rx_io_RDDATAVALID $end
$var wire 32 G Rx_io_RDATA [31:0] $end
$scope module Rx $end
$var wire 1 + clock $end
$var wire 4 H io_ADD [3:0] $end
$var wire 1 - io_RD $end
$var wire 1 F io_RDDATAVALID $end
$var wire 1 E io_READY $end
$var wire 1 . io_TOP_RDDATAVALID $end
$var wire 1 / io_TOP_READY $end
$var wire 32 I io_WDATA [31:0] $end
$var wire 1 1 io_WR $end
$var wire 1 J r_wr $end
$var wire 1 K rf__T_6_en $end
$var wire 1 L rf__T_6_mask $end
$var wire 32 M rf__T_8_data [31:0] $end
$var wire 4 N rf__T_addr [3:0] $end
$var wire 32 O rf__T_data [31:0] $end
$var wire 1 P rf__T_en $end
$var wire 1 Q rf__T_mask $end
$var wire 4 R rf__T_8_addr [3:0] $end
$var wire 32 S rf__T_6_data [31:0] $end
$var wire 4 T rf__T_6_addr [3:0] $end
$var wire 32 U io_RDATA [31:0] $end
$var wire 32 V _GEN_3 [31:0] $end
$var wire 32 W _GEN_13 [31:0] $end
$var wire 1 X _GEN_12 $end
$upscope $end
$scope module Tx $end
$var wire 1 Y _GEN_15 $end
$var wire 1 Z _GEN_54 $end
$var wire 1 [ _GEN_55 $end
$var wire 1 \ _T_13 $end
$var wire 1 ] _T_22 $end
$var wire 1 2 clock $end
$var wire 4 ^ io_ADDRESS [3:0] $end
$var wire 1 C io_RD $end
$var wire 32 _ io_RDATA [31:0] $end
$var wire 1 4 io_RX_RDDATAVALID $end
$var wire 1 5 io_RX_READY $end
$var wire 4 ` io_TOP_ADDRESS [3:0] $end
$var wire 4 a io_TOP_LENGTH [3:0] $end
$var wire 1 8 io_TOP_RD $end
$var wire 32 b io_TOP_WDATA [31:0] $end
$var wire 1 : io_TOP_WR $end
$var wire 1 @ io_WR $end
$var wire 1 ; reset $end
$var wire 32 c io_WDATA [31:0] $end
$var wire 32 d io_TOP_RDATA [31:0] $end
$var wire 3 e _T_6 [2:0] $end
$var wire 1 f _T_4 $end
$var wire 4 g _T_32 [3:0] $end
$var wire 4 h _T_30 [3:0] $end
$var wire 1 i _T_28 $end
$var wire 1 j _T_26 $end
$var wire 1 k _T_2 $end
$var wire 1 l _T_10 $end
$var wire 32 m _GEN_67 [31:0] $end
$var wire 32 n _GEN_59 [31:0] $end
$var wire 32 o _GEN_48 [31:0] $end
$var wire 32 p _GEN_38 [31:0] $end
$var wire 32 q _GEN_27 [31:0] $end
$var reg 4 r r_address [3:0] $end
$var reg 4 s r_len [3:0] $end
$var reg 1 t r_rd $end
$var reg 1 u r_rd_done $end
$var reg 3 v r_transaction_cnt [2:0] $end
$var reg 32 w r_wdata [31:0] $end
$var reg 1 x r_wr $end
$var reg 2 y state [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx y
xx
bx w
bx v
xu
xt
bx s
bx r
bx q
bx p
bx o
bx n
bx m
xl
xk
xj
xi
bx h
bx g
xf
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
x]
x\
x[
xZ
xY
xX
bx W
bx V
bx U
bx T
bx S
bx R
1Q
1P
b10 O
b1 N
bx M
1L
xK
xJ
bx I
bx H
bx G
xF
xE
bx D
xC
bx B
bx A
x@
bx ?
bx >
bx =
bx <
x;
x:
bx 9
x8
bx 7
bx 6
x5
x4
bx 3
02
x1
bx 0
x/
x.
x-
bx ,
0+
x*
bx )
x(
x'
x&
x%
bx $
0#
bx "
bx !
$end
#5000
12
1+
1#
#10000
02
0+
0#
#15000
b0 n
b0 3
b0 _
b0 G
b0 U
0K
b0 W
b0 !
b0 >
b0 B
b0 d
b0 m
0\
b0 V
0X
0J
b0 S
b0 R
b0 T
0[
0Z
1k
0j
b0 y
1f
b1 e
b0 v
0u
0-
0C
0t
01
0@
0x
b0 0
b0 I
b0 A
b0 c
b0 w
b1 h
b0 ,
b0 H
b0 D
b0 ^
b0 r
0i
b1111 g
b0 s
b0 o
b0 p
b0 q
0]
12
1+
1#
04
0F
0.
0&
08
0%
0:
0*
1;
1(
#20000
02
0+
0#
#25000
0Y
1\
05
0E
0/
0'
18
1%
b1010 9
b1010 b
b1010 )
b1010 ?
0l
b1 7
b1 a
b1 $
b1 =
b1 6
b1 `
b1 "
b1 <
0;
0(
12
1+
1#
#30000
02
0+
0#
#35000
bx W
bx V
1X
0f
b10 e
b1 v
1-
1C
1t
b10 h
b1 ,
b1 H
b1 D
b1 ^
b1 r
b0 g
b1 s
12
1+
1#
#40000
02
0+
0#
#45000
1f
b1 e
b0 v
b10 W
b10 V
b10 n
b10 M
b1 R
b1 T
b10 3
b10 _
b10 G
b10 U
1Y
15
1E
1/
1'
12
1+
1#
#50000
02
0+
0#
#55000
0X
0f
b10 e
b1 v
0-
0C
0t
b1 h
b0 ,
b0 H
b0 D
b0 ^
b0 r
b1111 g
b0 s
b0 W
b0 V
bx M
b0 R
b0 T
b0 3
b0 _
b0 G
b0 U
0Y
b0 n
0\
14
1F
1.
1&
05
0E
0/
0'
08
0%
b0 9
b0 b
b0 )
b0 ?
b0 7
b0 a
b0 $
b0 =
b0 6
b0 `
b0 "
b0 <
12
1+
1#
#60000
02
0+
0#
#65000
04
0F
0.
0&
12
1+
1#
#70000
02
0+
0#
#75000
12
1+
1#
#80000
02
0+
0#
#85000
12
1+
1#
#90000
02
0+
0#
#95000
12
1+
1#
#100000
02
0+
0#
#105000
12
1+
1#
#110000
02
0+
0#
#115000
12
1+
1#
#120000
02
0+
0#
#125000
12
1+
1#
#130000
02
0+
0#
#135000
12
1+
1#
#140000
02
0+
0#
#145000
12
1+
1#
#150000
02
0+
0#
#155000
12
1+
1#
#160000
02
0+
0#
#165000
12
1+
1#
