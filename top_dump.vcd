$date
	Fri Jun 10 17:14:14 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_tb $end
$var wire 32 ! cdata_out [31:0] $end
$var reg 1 " clock $end
$var reg 1 # reset $end
$var reg 1 $ start $end
$scope module uut $end
$var wire 1 % Rx_clock $end
$var wire 32 & Rx_io_ADD [31:0] $end
$var wire 32 ' Rx_io_WDATA [31:0] $end
$var wire 1 ( Rx_io_WR $end
$var wire 1 ) Rx_reset $end
$var wire 1 * Tx_clock $end
$var wire 1 + Tx_io_START $end
$var wire 1 , Tx_reset $end
$var wire 1 " clock $end
$var wire 32 - io_cdata_check [31:0] $end
$var wire 1 $ io_start $end
$var wire 1 # reset $end
$var wire 1 . Tx_io_WR $end
$var wire 32 / Tx_io_WDATA [31:0] $end
$var wire 32 0 Tx_io_ADD [31:0] $end
$var wire 32 1 Rx_io_CDATA [31:0] $end
$scope module Rx $end
$var wire 1 % clock $end
$var wire 32 2 io_ADD [31:0] $end
$var wire 32 3 io_WDATA [31:0] $end
$var wire 1 ( io_WR $end
$var wire 1 ) reset $end
$var wire 32 4 io_CDATA [31:0] $end
$var wire 1 5 _T_9 $end
$var wire 1 6 _T_7 $end
$var wire 1 7 _T_4 $end
$var wire 1 8 _T_2 $end
$var wire 1 9 _T_12 $end
$var reg 32 : r_add [31:0] $end
$var reg 32 ; r_cdata [31:0] $end
$var reg 32 < r_wdata [31:0] $end
$var reg 1 = r_wr $end
$var reg 2 > state [1:0] $end
$upscope $end
$scope module Tx $end
$var wire 1 ? _GEN_10 $end
$var wire 1 * clock $end
$var wire 1 + io_START $end
$var wire 1 . io_WR $end
$var wire 1 , reset $end
$var wire 32 @ io_WDATA [31:0] $end
$var wire 32 A io_ADD [31:0] $end
$var wire 1 B _T_9 $end
$var wire 1 C _T_6 $end
$var wire 1 D _T_2 $end
$var wire 1 E _T_12 $end
$var wire 1 F _GEN_8 $end
$var wire 1 G _GEN_1 $end
$var reg 32 H r_add [31:0] $end
$var reg 1 I r_start $end
$var reg 32 J r_wdata [31:0] $end
$var reg 1 K r_wr $end
$var reg 2 L state [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx L
xK
bx J
xI
bx H
xG
xF
xE
xD
xC
xB
bx A
bx @
x?
bx >
x=
bx <
bx ;
bx :
x9
x8
x7
x6
x5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
x.
bx -
x,
x+
0*
x)
x(
bx '
bx &
0%
x$
x#
0"
bx !
$end
#5000
0?
0F
0G
1D
0C
0B
0E
b0 L
b0 '
b0 3
b0 /
b0 @
b0 J
b0 &
b0 2
b0 0
b0 A
b0 H
0(
0.
0K
0I
18
06
09
b0 >
b0 !
b0 -
b0 1
b0 4
b0 ;
b0 <
07
05
b0 :
0=
0+
0$
1,
1)
1#
1*
1%
1"
#10000
0*
0%
0"
#15000
1*
1%
1"
#20000
0*
0%
0"
#25000
1I
1*
1%
1"
0,
0)
0#
1+
1$
#30000
0*
0%
0"
#35000
1?
0D
1C
b1 L
1*
1%
1"
#40000
0*
0%
0"
#45000
1F
1G
0C
1B
b10 L
b10100 '
b10100 3
b10100 /
b10100 @
b10100 J
b11110 &
b11110 2
b11110 0
b11110 A
b11110 H
1(
1.
1K
1*
1%
1"
#50000
0*
0%
0"
#55000
0?
0F
0G
0B
1E
b11 L
b10110 '
b10110 3
b10110 /
b10110 @
b10110 J
b11111 &
b11111 2
b11111 0
b11111 A
b11111 H
b10100 <
17
b11110 :
1=
1*
1%
1"
#60000
0*
0%
0"
#65000
b0 '
b0 3
b0 /
b0 @
b0 J
b0 &
b0 2
b0 0
b0 A
b0 H
0(
0.
0K
08
16
b1 >
b10100 !
b10100 -
b10100 1
b10100 4
b10100 ;
b10110 <
07
15
b11111 :
1*
1%
1"
#70000
0*
0%
0"
#75000
06
19
b10 >
b10110 !
b10110 -
b10110 1
b10110 4
b10110 ;
b0 <
05
b0 :
0=
1*
1%
1"
#80000
0*
0%
0"
#85000
b0 !
b0 -
b0 1
b0 4
b0 ;
1*
1%
1"
#90000
0*
0%
0"
#95000
1*
1%
1"
#100000
0*
0%
0"
#105000
1*
1%
1"
#110000
0*
0%
0"
#115000
1*
1%
1"
#120000
0*
0%
0"
#125000
1*
1%
1"
